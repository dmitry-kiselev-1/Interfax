//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18052
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Interfax.FileCollector.Windows.Service.FileCollectorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileStorage", Namespace="http://schemas.datacontract.org/2004/07/Interfax.FileCollector.Web.Service.DataCo" +
        "ntracts")]
    [System.SerializableAttribute()]
    public partial class FileStorage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset LoadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset LoadDate {
            get {
                return this.LoadDateField;
            }
            set {
                if ((this.LoadDateField.Equals(value) != true)) {
                    this.LoadDateField = value;
                    this.RaisePropertyChanged("LoadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileCollectorServiceReference.IFileCollectorService")]
    public interface IFileCollectorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileCollectorService/GetFiles", ReplyAction="http://tempuri.org/IFileCollectorService/GetFilesResponse")]
        Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[] GetFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileCollectorService/GetFiles", ReplyAction="http://tempuri.org/IFileCollectorService/GetFilesResponse")]
        System.Threading.Tasks.Task<Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[]> GetFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileCollectorService/UploadFile", ReplyAction="http://tempuri.org/IFileCollectorService/UploadFileResponse")]
        System.Nullable<System.Guid> UploadFile(string name, System.Nullable<System.DateTimeOffset> createDate, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileCollectorService/UploadFile", ReplyAction="http://tempuri.org/IFileCollectorService/UploadFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UploadFileAsync(string name, System.Nullable<System.DateTimeOffset> createDate, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileCollectorService/DownloadFile", ReplyAction="http://tempuri.org/IFileCollectorService/DownloadFileResponse")]
        Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[] DownloadFile(System.Guid Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileCollectorService/DownloadFile", ReplyAction="http://tempuri.org/IFileCollectorService/DownloadFileResponse")]
        System.Threading.Tasks.Task<Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[]> DownloadFileAsync(System.Guid Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileCollectorServiceChannel : Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.IFileCollectorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileCollectorServiceClient : System.ServiceModel.ClientBase<Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.IFileCollectorService>, Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.IFileCollectorService {
        
        public FileCollectorServiceClient() {
        }
        
        public FileCollectorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileCollectorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileCollectorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileCollectorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[] GetFiles() {
            return base.Channel.GetFiles();
        }
        
        public System.Threading.Tasks.Task<Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[]> GetFilesAsync() {
            return base.Channel.GetFilesAsync();
        }
        
        public System.Nullable<System.Guid> UploadFile(string name, System.Nullable<System.DateTimeOffset> createDate, byte[] data) {
            return base.Channel.UploadFile(name, createDate, data);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UploadFileAsync(string name, System.Nullable<System.DateTimeOffset> createDate, byte[] data) {
            return base.Channel.UploadFileAsync(name, createDate, data);
        }
        
        public Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[] DownloadFile(System.Guid Id) {
            return base.Channel.DownloadFile(Id);
        }
        
        public System.Threading.Tasks.Task<Interfax.FileCollector.Windows.Service.FileCollectorServiceReference.FileStorage[]> DownloadFileAsync(System.Guid Id) {
            return base.Channel.DownloadFileAsync(Id);
        }
    }
}
